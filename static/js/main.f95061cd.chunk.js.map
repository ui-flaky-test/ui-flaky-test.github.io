{"version":3,"sources":["ProjectDetails.tsx","App.tsx","index.tsx"],"names":["ProjectDetails","project","name","console","log","totalCount","rootCauseInfo","RootCause","manifestationInfo","Manifestation","fixInfo","Fix","projectBugs","Bugs","rootCauseElem","Object","keys","filter","rootCause","map","rootCauseCount","manifestationElem","manifestiation","manifestiationCount","fixElem","fix","fixCount","href","rel","target","className","projectDetails","URL","Title","substring","App","useState","data","setData","options","setOptionsData","chosenOption","setOption","useEffect","fetch","headers","then","response","json","myJson","projectsList","projectDetailsElem","onChange","selectedOption","value","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PA8FeA,MAzFf,YAA+C,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,KAC9BC,QAAQC,IAAI,UAAWH,GACvB,IAAMI,EAAqBJ,EAAO,MAC5BK,EAAgBL,EAAQM,UACxBC,EAAoBP,EAAQQ,cAC5BC,EAAUT,EAAQU,IAClBC,EAAqBX,EAAQY,KAE7BC,EAAgB,6BACjBC,OAAOC,KAAKV,GACZW,QAAO,SAACC,GACL,OAAoC,IAA7BZ,EAAcY,MAExBC,KAAI,SAACD,GACF,IAAME,EAAiBd,EAAcY,GAErC,OAAO,+BAAKA,EAAL,QAAuBE,UAIhCC,EAAoB,6BACrBN,OAAOC,KAAKR,GACZS,QAAO,SAACK,GACL,OAA6C,IAAtCd,EAAkBc,MAE5BH,KAAI,SAACG,GACF,IAAMC,EAAsBf,EAAkBc,GAE9C,OAAO,+BAAKA,EAAL,QAA4BC,UAIrCC,EAAU,6BACfT,OAAOC,KAAKN,GACZO,QAAO,SAACQ,GACL,OAAwB,IAAjBf,EAAQe,MAElBN,KAAI,SAACM,GACF,IAAMC,EAAWhB,EAAQe,GAEzB,OAAO,+BAAKA,EAAL,QAAiBC,UAI5B,OACI,gCACI,+BAAM,4BAAG,mBAAGC,KAAI,6BAAwBzB,GAAQ0B,IAAI,aAAaC,OAAO,SAA/D,SAAyE3B,QAAoB,uBAAK,uBAC3G,uDAA4BG,KAC5B,uBACA,uBACA,sBAAKyB,UAAU,sBAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,4CACA,uBACKhB,KAET,sBAAKgB,UAAU,qBAAf,UACI,yDACA,uBACCT,KAEL,sBAAKS,UAAU,qBAAf,UACI,mDACA,uBACCN,QAGT,4CACA,6BACKZ,EAAYO,KAAI,SAAAY,GAAmB,IACzBC,EAA6CD,EAA7CC,IAAKC,EAAwCF,EAAxCE,MAAO1B,EAAiCwB,EAAjCxB,UAAWE,EAAsBsB,EAAtBtB,cAAeE,EAAOoB,EAAPpB,IAC7C,OAAO,iCACH,mBAAGgB,KAAMK,EAAKJ,IAAI,aAAaC,OAAO,SAAtC,mBACII,EAAMC,UAAU,EAAE,IADtB,iBACkC3B,EADlC,cACiDE,EADjD,cACoEE,KAEpE,yBAJG,gBAAoBqB,SAQnC,2B,sBC9BGG,MAhDf,WAAgB,IAAD,EACQC,mBAAS,IADjB,mBACNC,EADM,KACDC,EADC,OAEkBF,mBAAmB,CAAC,KAFtC,mBAENG,EAFM,KAEEC,EAFF,OAGqBJ,mBAAiB,IAHtC,mBAGNK,EAHM,KAGQC,EAHR,KAsBbC,qBAAU,WAjBRC,MAAM,eACL,CACCC,QAAU,CACR,eAAgB,mBAChB,OAAU,sBAIXC,MAAK,SAASC,GACb,OAAOA,EAASC,UAEjBF,MAAK,SAASG,GACb,IAAMC,EAAsB,CAAI,IAAJ,mBAAUnC,OAAOC,KAAKiC,KAClDT,EAAeU,GACfZ,EAAQW,QAKZ,IAGF,IAAIE,EAAqB,yBACzB,GAAoB,KAAjBV,EAAoB,CAErB,IAAMV,EAAiBM,EAAKI,GAE5BU,EAAqB,cAAC,EAAD,CAAgBlD,QAAS8B,EAAgB7B,KAAMuC,IAItE,OACE,sBAAKX,UAAU,MAAf,UACE,sDACA,cAAC,IAAD,CAAUS,QAASA,EAASa,SAAU,SAACC,GACrCX,EAAUW,EAAeC,QACxBA,MAAOb,EAAcc,YAAY,mBAAoBzB,UAAU,gBAClE,uBACCqB,MC3CPK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f95061cd.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Bug} from './types';\nimport './ProjectDetails.css';\n\nfunction ProjectDetails({project, name}: any) {\n    console.log('Project', project)\n    const totalCount: number = project[\"Total\"];\n    const rootCauseInfo = project.RootCause;\n    const manifestationInfo = project.Manifestation;\n    const fixInfo = project.Fix;\n    const projectBugs: Bug[] = project.Bugs;\n\n    const rootCauseElem = <ul>\n        {Object.keys(rootCauseInfo)\n        .filter((rootCause) => {\n            return rootCauseInfo[rootCause] !== 0;\n        })\n        .map((rootCause) => {\n            const rootCauseCount = rootCauseInfo[rootCause];\n            \n            return <li>{rootCause}:&nbsp;{rootCauseCount}</li>\n        })}\n    </ul>;\n\n    const manifestationElem = <ul>\n        {Object.keys(manifestationInfo)\n        .filter((manifestiation) => {\n            return manifestationInfo[manifestiation] !== 0;\n        })\n        .map((manifestiation) => {\n            const manifestiationCount = manifestationInfo[manifestiation];\n            \n            return <li>{manifestiation}:&nbsp;{manifestiationCount}</li>\n        })}\n        </ul>;\n\n    const fixElem = <ul>\n    {Object.keys(fixInfo)\n    .filter((fix) => {\n        return fixInfo[fix] !== 0;\n    })\n    .map((fix) => {\n        const fixCount = fixInfo[fix];\n        \n        return <li>{fix}:&nbsp;{fixCount}</li>\n    })}\n    </ul>\n\n    return (\n        <div>\n            <span><b><a href={`https://github.com/${name}`} rel=\"noreferrer\" target=\"_blank\">{name}</a></b></span><br/><br/>\n            <span>Number of Bugs:&nbsp;{totalCount}</span>\n            <br/>\n            <br/>\n            <div className=\"triple-group-parent\">\n                <div className=\"triple-group-child\">\n                    <b>Root Causes</b>\n                    <br/>\n                        {rootCauseElem}\n                </div>\n                <div className=\"triple-group-child\">\n                    <b>Manifestation Strategies</b>\n                    <br/>\n                    {manifestationElem}\n                </div>\n                <div className=\"triple-group-child\">\n                    <b>Buf Fix Strategies</b>\n                    <br/>\n                    {fixElem}\n                </div>\n            </div>\n            <span>Bug List</span>\n            <ul>\n                {projectBugs.map(projectDetails => {\n                    const {URL, Title, RootCause, Manifestation, Fix} = projectDetails\n                    return <span key={`title-${URL}`}>\n                        <a href={URL} rel=\"noreferrer\" target=\"_blank\">\n                        {`${Title.substring(0,30)}... - ${RootCause} - ${Manifestation} - ${Fix}`}\n                        </a>\n                        <br/>\n                        </span>\n                })}\n            </ul>\n            <br/>\n        </div>\n    )\n}\n\nProjectDetails.propTypes = {\n    project: PropTypes.any,\n    name: PropTypes.string\n}\n\nexport default ProjectDetails\n\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport ProjectDetails from './ProjectDetails';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nfunction App() {\n  const [data,setData]=useState([]);\n  const [options,setOptionsData]=useState<string[]>(['']);\n  const [chosenOption, setOption] = useState<string>('');\n  const getData=()=>{\n    fetch('details.json'\n    ,{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    }\n    )\n      .then(function(response){\n        return response.json();\n      })\n      .then(function(myJson) {\n        const projectsList: string[] = ['',...Object.keys(myJson)];\n        setOptionsData(projectsList)\n        setData(myJson)\n      });\n  }\n  useEffect(()=>{\n    getData()\n  },[])\n\n  \n  let projectDetailsElem = <span></span>;\n  if(chosenOption !== ''){\n  //@ts-ignore\n    const projectDetails = data[chosenOption];\n  //@ts-ignore\n    projectDetailsElem = <ProjectDetails project={projectDetails} name={chosenOption}></ProjectDetails>;\n  }\n\n\n  return (\n    <div className=\"App\">\n      <label>Select a Project:</label>\n      <Dropdown options={options} onChange={(selectedOption) => {\n        setOption(selectedOption.value);\n      }} value={chosenOption} placeholder=\"Select an option\"  className=\"form-select\"/>\n      <br/>\n      {projectDetailsElem}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}